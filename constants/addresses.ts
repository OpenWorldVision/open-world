import { Networks } from './blockchain'

export const HARMONY_TESTNET = {
  OPENWORLD: '0x81d46b953ea84204AC1CaB75A4cB188E2529DCFB',
  PROFILES: '0xdA7Ac2056FeC83f1A9E1a1a3F339fcaA696618c3',
  ITEM: '0xBd69df7fFcB9d7F071bb2124E1Eb8734bBDA8E0B',
  PROFESSION: '0xC5Cc7a45Dd43AE5a50bB5487C79f37fFeb0B4616',
  HERO_CORE: '0x4DADfE6D1cC2595bF31FF3d478E654179c524F7c',
  MARKETPLACE: '0x6d74d7389eF8B6fE5338112b6Aa55E63410Fce1B',
}

export const BSC_TESTNET = {
  OPENWORLD: '0x28ad774C41c229D48a441B280cBf7b5c5F1FED2B',
  PROFILES: '0xae46953433ebE48698c6D86a49fA154eDCad99C3',
  ITEM: '0xC7610EC0BF5e0EC8699Bc514899471B3cD7d5492',
  PROFESSION: '0xf1FB61D2f353C8e612E201Ed8bb9Fb6FB4CC8673',
  HERO_CORE: '0x585ded8E0Dd7DCfad02F13b94571E24cA59A3234',
  MARKETPLACE: '0x7210aEaF0c7d74366E37cfB37073cB630Ac86B5b',
}
export const getAddresses = (networkID: number) => {
  if (networkID === Networks.HARMONY_TESTNET) return HARMONY_TESTNET
  if (networkID === Networks.BSC_TESTNET) return BSC_TESTNET

  throw Error("Network don't support")
}
